/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int longestZigZag(TreeNode* root) {
        int maxLen = 0;
        if (root == nullptr) return maxLen;
        maxLen = max(maxLen, zigzagPathHelper(root->left, true, 1));
        maxLen = max(maxLen, zigzagPathHelper(root->right, false, 1));
        return maxLen - 1;
    }
    
    int zigzagPathHelper(TreeNode* node, bool isLeft, int length) {
        if (node == nullptr) return length;
        if (isLeft) {
            return max(zigzagPathHelper(node->right, false, length + 1), zigzagPathHelper(node->left, true, 1));
        }
        else {
            return max(zigzagPathHelper(node->left, true, length + 1), zigzagPathHelper(node->right, false, 1));
        }
    }
};
